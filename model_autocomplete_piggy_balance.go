/*
Firefly III API v2.0.4

This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2023-06-11T09:14:35+00:00 

API version: 2.0.4
Contact: james@firefly-iii.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AutocompletePiggyBalance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutocompletePiggyBalance{}

// AutocompletePiggyBalance struct for AutocompletePiggyBalance
type AutocompletePiggyBalance struct {
	Id string `json:"id"`
	// Name of the piggy bank found by an auto-complete search.
	Name string `json:"name"`
	// Name of the piggy bank found by an auto-complete search with the current balance formatted nicely.
	NameWithBalance *string `json:"name_with_balance,omitempty"`
	// Currency ID for this piggy bank.
	CurrencyId *string `json:"currency_id,omitempty"`
	// Currency code for this piggy bank.
	CurrencyCode *string `json:"currency_code,omitempty"`
	CurrencySymbol *string `json:"currency_symbol,omitempty"`
	CurrencyDecimalPlaces *int32 `json:"currency_decimal_places,omitempty"`
	// The group ID of the group this object is part of. NULL if no group.
	ObjectGroupId NullableString `json:"object_group_id,omitempty"`
	// The name of the group. NULL if no group.
	ObjectGroupTitle NullableString `json:"object_group_title,omitempty"`
}

// NewAutocompletePiggyBalance instantiates a new AutocompletePiggyBalance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutocompletePiggyBalance(id string, name string) *AutocompletePiggyBalance {
	this := AutocompletePiggyBalance{}
	this.Id = id
	this.Name = name
	return &this
}

// NewAutocompletePiggyBalanceWithDefaults instantiates a new AutocompletePiggyBalance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutocompletePiggyBalanceWithDefaults() *AutocompletePiggyBalance {
	this := AutocompletePiggyBalance{}
	return &this
}

// GetId returns the Id field value
func (o *AutocompletePiggyBalance) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AutocompletePiggyBalance) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AutocompletePiggyBalance) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *AutocompletePiggyBalance) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AutocompletePiggyBalance) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AutocompletePiggyBalance) SetName(v string) {
	o.Name = v
}

// GetNameWithBalance returns the NameWithBalance field value if set, zero value otherwise.
func (o *AutocompletePiggyBalance) GetNameWithBalance() string {
	if o == nil || IsNil(o.NameWithBalance) {
		var ret string
		return ret
	}
	return *o.NameWithBalance
}

// GetNameWithBalanceOk returns a tuple with the NameWithBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutocompletePiggyBalance) GetNameWithBalanceOk() (*string, bool) {
	if o == nil || IsNil(o.NameWithBalance) {
		return nil, false
	}
	return o.NameWithBalance, true
}

// HasNameWithBalance returns a boolean if a field has been set.
func (o *AutocompletePiggyBalance) HasNameWithBalance() bool {
	if o != nil && !IsNil(o.NameWithBalance) {
		return true
	}

	return false
}

// SetNameWithBalance gets a reference to the given string and assigns it to the NameWithBalance field.
func (o *AutocompletePiggyBalance) SetNameWithBalance(v string) {
	o.NameWithBalance = &v
}

// GetCurrencyId returns the CurrencyId field value if set, zero value otherwise.
func (o *AutocompletePiggyBalance) GetCurrencyId() string {
	if o == nil || IsNil(o.CurrencyId) {
		var ret string
		return ret
	}
	return *o.CurrencyId
}

// GetCurrencyIdOk returns a tuple with the CurrencyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutocompletePiggyBalance) GetCurrencyIdOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyId) {
		return nil, false
	}
	return o.CurrencyId, true
}

// HasCurrencyId returns a boolean if a field has been set.
func (o *AutocompletePiggyBalance) HasCurrencyId() bool {
	if o != nil && !IsNil(o.CurrencyId) {
		return true
	}

	return false
}

// SetCurrencyId gets a reference to the given string and assigns it to the CurrencyId field.
func (o *AutocompletePiggyBalance) SetCurrencyId(v string) {
	o.CurrencyId = &v
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise.
func (o *AutocompletePiggyBalance) GetCurrencyCode() string {
	if o == nil || IsNil(o.CurrencyCode) {
		var ret string
		return ret
	}
	return *o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutocompletePiggyBalance) GetCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyCode) {
		return nil, false
	}
	return o.CurrencyCode, true
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *AutocompletePiggyBalance) HasCurrencyCode() bool {
	if o != nil && !IsNil(o.CurrencyCode) {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given string and assigns it to the CurrencyCode field.
func (o *AutocompletePiggyBalance) SetCurrencyCode(v string) {
	o.CurrencyCode = &v
}

// GetCurrencySymbol returns the CurrencySymbol field value if set, zero value otherwise.
func (o *AutocompletePiggyBalance) GetCurrencySymbol() string {
	if o == nil || IsNil(o.CurrencySymbol) {
		var ret string
		return ret
	}
	return *o.CurrencySymbol
}

// GetCurrencySymbolOk returns a tuple with the CurrencySymbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutocompletePiggyBalance) GetCurrencySymbolOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencySymbol) {
		return nil, false
	}
	return o.CurrencySymbol, true
}

// HasCurrencySymbol returns a boolean if a field has been set.
func (o *AutocompletePiggyBalance) HasCurrencySymbol() bool {
	if o != nil && !IsNil(o.CurrencySymbol) {
		return true
	}

	return false
}

// SetCurrencySymbol gets a reference to the given string and assigns it to the CurrencySymbol field.
func (o *AutocompletePiggyBalance) SetCurrencySymbol(v string) {
	o.CurrencySymbol = &v
}

// GetCurrencyDecimalPlaces returns the CurrencyDecimalPlaces field value if set, zero value otherwise.
func (o *AutocompletePiggyBalance) GetCurrencyDecimalPlaces() int32 {
	if o == nil || IsNil(o.CurrencyDecimalPlaces) {
		var ret int32
		return ret
	}
	return *o.CurrencyDecimalPlaces
}

// GetCurrencyDecimalPlacesOk returns a tuple with the CurrencyDecimalPlaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutocompletePiggyBalance) GetCurrencyDecimalPlacesOk() (*int32, bool) {
	if o == nil || IsNil(o.CurrencyDecimalPlaces) {
		return nil, false
	}
	return o.CurrencyDecimalPlaces, true
}

// HasCurrencyDecimalPlaces returns a boolean if a field has been set.
func (o *AutocompletePiggyBalance) HasCurrencyDecimalPlaces() bool {
	if o != nil && !IsNil(o.CurrencyDecimalPlaces) {
		return true
	}

	return false
}

// SetCurrencyDecimalPlaces gets a reference to the given int32 and assigns it to the CurrencyDecimalPlaces field.
func (o *AutocompletePiggyBalance) SetCurrencyDecimalPlaces(v int32) {
	o.CurrencyDecimalPlaces = &v
}

// GetObjectGroupId returns the ObjectGroupId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutocompletePiggyBalance) GetObjectGroupId() string {
	if o == nil || IsNil(o.ObjectGroupId.Get()) {
		var ret string
		return ret
	}
	return *o.ObjectGroupId.Get()
}

// GetObjectGroupIdOk returns a tuple with the ObjectGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutocompletePiggyBalance) GetObjectGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ObjectGroupId.Get(), o.ObjectGroupId.IsSet()
}

// HasObjectGroupId returns a boolean if a field has been set.
func (o *AutocompletePiggyBalance) HasObjectGroupId() bool {
	if o != nil && o.ObjectGroupId.IsSet() {
		return true
	}

	return false
}

// SetObjectGroupId gets a reference to the given NullableString and assigns it to the ObjectGroupId field.
func (o *AutocompletePiggyBalance) SetObjectGroupId(v string) {
	o.ObjectGroupId.Set(&v)
}
// SetObjectGroupIdNil sets the value for ObjectGroupId to be an explicit nil
func (o *AutocompletePiggyBalance) SetObjectGroupIdNil() {
	o.ObjectGroupId.Set(nil)
}

// UnsetObjectGroupId ensures that no value is present for ObjectGroupId, not even an explicit nil
func (o *AutocompletePiggyBalance) UnsetObjectGroupId() {
	o.ObjectGroupId.Unset()
}

// GetObjectGroupTitle returns the ObjectGroupTitle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutocompletePiggyBalance) GetObjectGroupTitle() string {
	if o == nil || IsNil(o.ObjectGroupTitle.Get()) {
		var ret string
		return ret
	}
	return *o.ObjectGroupTitle.Get()
}

// GetObjectGroupTitleOk returns a tuple with the ObjectGroupTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutocompletePiggyBalance) GetObjectGroupTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ObjectGroupTitle.Get(), o.ObjectGroupTitle.IsSet()
}

// HasObjectGroupTitle returns a boolean if a field has been set.
func (o *AutocompletePiggyBalance) HasObjectGroupTitle() bool {
	if o != nil && o.ObjectGroupTitle.IsSet() {
		return true
	}

	return false
}

// SetObjectGroupTitle gets a reference to the given NullableString and assigns it to the ObjectGroupTitle field.
func (o *AutocompletePiggyBalance) SetObjectGroupTitle(v string) {
	o.ObjectGroupTitle.Set(&v)
}
// SetObjectGroupTitleNil sets the value for ObjectGroupTitle to be an explicit nil
func (o *AutocompletePiggyBalance) SetObjectGroupTitleNil() {
	o.ObjectGroupTitle.Set(nil)
}

// UnsetObjectGroupTitle ensures that no value is present for ObjectGroupTitle, not even an explicit nil
func (o *AutocompletePiggyBalance) UnsetObjectGroupTitle() {
	o.ObjectGroupTitle.Unset()
}

func (o AutocompletePiggyBalance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutocompletePiggyBalance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	if !IsNil(o.NameWithBalance) {
		toSerialize["name_with_balance"] = o.NameWithBalance
	}
	if !IsNil(o.CurrencyId) {
		toSerialize["currency_id"] = o.CurrencyId
	}
	if !IsNil(o.CurrencyCode) {
		toSerialize["currency_code"] = o.CurrencyCode
	}
	if !IsNil(o.CurrencySymbol) {
		toSerialize["currency_symbol"] = o.CurrencySymbol
	}
	if !IsNil(o.CurrencyDecimalPlaces) {
		toSerialize["currency_decimal_places"] = o.CurrencyDecimalPlaces
	}
	if o.ObjectGroupId.IsSet() {
		toSerialize["object_group_id"] = o.ObjectGroupId.Get()
	}
	if o.ObjectGroupTitle.IsSet() {
		toSerialize["object_group_title"] = o.ObjectGroupTitle.Get()
	}
	return toSerialize, nil
}

type NullableAutocompletePiggyBalance struct {
	value *AutocompletePiggyBalance
	isSet bool
}

func (v NullableAutocompletePiggyBalance) Get() *AutocompletePiggyBalance {
	return v.value
}

func (v *NullableAutocompletePiggyBalance) Set(val *AutocompletePiggyBalance) {
	v.value = val
	v.isSet = true
}

func (v NullableAutocompletePiggyBalance) IsSet() bool {
	return v.isSet
}

func (v *NullableAutocompletePiggyBalance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutocompletePiggyBalance(val *AutocompletePiggyBalance) *NullableAutocompletePiggyBalance {
	return &NullableAutocompletePiggyBalance{value: val, isSet: true}
}

func (v NullableAutocompletePiggyBalance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutocompletePiggyBalance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


