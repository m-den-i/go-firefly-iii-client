/*
Firefly III API v2.0.4

This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2023-06-11T09:14:35+00:00 

API version: 2.0.4
Contact: james@firefly-iii.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the BillPaidDatesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillPaidDatesInner{}

// BillPaidDatesInner struct for BillPaidDatesInner
type BillPaidDatesInner struct {
	// Transaction group ID of the paid bill.
	TransactionGroupId *string `json:"transaction_group_id,omitempty"`
	// Transaction journal ID of the paid bill.
	TransactionJournalId *string `json:"transaction_journal_id,omitempty"`
	// Date the bill was paid.
	Date *time.Time `json:"date,omitempty"`
}

// NewBillPaidDatesInner instantiates a new BillPaidDatesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillPaidDatesInner() *BillPaidDatesInner {
	this := BillPaidDatesInner{}
	return &this
}

// NewBillPaidDatesInnerWithDefaults instantiates a new BillPaidDatesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillPaidDatesInnerWithDefaults() *BillPaidDatesInner {
	this := BillPaidDatesInner{}
	return &this
}

// GetTransactionGroupId returns the TransactionGroupId field value if set, zero value otherwise.
func (o *BillPaidDatesInner) GetTransactionGroupId() string {
	if o == nil || IsNil(o.TransactionGroupId) {
		var ret string
		return ret
	}
	return *o.TransactionGroupId
}

// GetTransactionGroupIdOk returns a tuple with the TransactionGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillPaidDatesInner) GetTransactionGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionGroupId) {
		return nil, false
	}
	return o.TransactionGroupId, true
}

// HasTransactionGroupId returns a boolean if a field has been set.
func (o *BillPaidDatesInner) HasTransactionGroupId() bool {
	if o != nil && !IsNil(o.TransactionGroupId) {
		return true
	}

	return false
}

// SetTransactionGroupId gets a reference to the given string and assigns it to the TransactionGroupId field.
func (o *BillPaidDatesInner) SetTransactionGroupId(v string) {
	o.TransactionGroupId = &v
}

// GetTransactionJournalId returns the TransactionJournalId field value if set, zero value otherwise.
func (o *BillPaidDatesInner) GetTransactionJournalId() string {
	if o == nil || IsNil(o.TransactionJournalId) {
		var ret string
		return ret
	}
	return *o.TransactionJournalId
}

// GetTransactionJournalIdOk returns a tuple with the TransactionJournalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillPaidDatesInner) GetTransactionJournalIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionJournalId) {
		return nil, false
	}
	return o.TransactionJournalId, true
}

// HasTransactionJournalId returns a boolean if a field has been set.
func (o *BillPaidDatesInner) HasTransactionJournalId() bool {
	if o != nil && !IsNil(o.TransactionJournalId) {
		return true
	}

	return false
}

// SetTransactionJournalId gets a reference to the given string and assigns it to the TransactionJournalId field.
func (o *BillPaidDatesInner) SetTransactionJournalId(v string) {
	o.TransactionJournalId = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *BillPaidDatesInner) GetDate() time.Time {
	if o == nil || IsNil(o.Date) {
		var ret time.Time
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillPaidDatesInner) GetDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *BillPaidDatesInner) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given time.Time and assigns it to the Date field.
func (o *BillPaidDatesInner) SetDate(v time.Time) {
	o.Date = &v
}

func (o BillPaidDatesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillPaidDatesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	// skip: transaction_group_id is readOnly
	// skip: transaction_journal_id is readOnly
	// skip: date is readOnly
	return toSerialize, nil
}

type NullableBillPaidDatesInner struct {
	value *BillPaidDatesInner
	isSet bool
}

func (v NullableBillPaidDatesInner) Get() *BillPaidDatesInner {
	return v.value
}

func (v *NullableBillPaidDatesInner) Set(val *BillPaidDatesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableBillPaidDatesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableBillPaidDatesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillPaidDatesInner(val *BillPaidDatesInner) *NullableBillPaidDatesInner {
	return &NullableBillPaidDatesInner{value: val, isSet: true}
}

func (v NullableBillPaidDatesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillPaidDatesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


