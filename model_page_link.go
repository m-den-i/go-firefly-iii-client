/*
Firefly III API v2.0.4

This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2023-06-11T09:14:35+00:00 

API version: 2.0.4
Contact: james@firefly-iii.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PageLink type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PageLink{}

// PageLink struct for PageLink
type PageLink struct {
	Self *string `json:"self,omitempty"`
	First *string `json:"first,omitempty"`
	Last *string `json:"last,omitempty"`
}

// NewPageLink instantiates a new PageLink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPageLink() *PageLink {
	this := PageLink{}
	return &this
}

// NewPageLinkWithDefaults instantiates a new PageLink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPageLinkWithDefaults() *PageLink {
	this := PageLink{}
	return &this
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *PageLink) GetSelf() string {
	if o == nil || IsNil(o.Self) {
		var ret string
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageLink) GetSelfOk() (*string, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *PageLink) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given string and assigns it to the Self field.
func (o *PageLink) SetSelf(v string) {
	o.Self = &v
}

// GetFirst returns the First field value if set, zero value otherwise.
func (o *PageLink) GetFirst() string {
	if o == nil || IsNil(o.First) {
		var ret string
		return ret
	}
	return *o.First
}

// GetFirstOk returns a tuple with the First field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageLink) GetFirstOk() (*string, bool) {
	if o == nil || IsNil(o.First) {
		return nil, false
	}
	return o.First, true
}

// HasFirst returns a boolean if a field has been set.
func (o *PageLink) HasFirst() bool {
	if o != nil && !IsNil(o.First) {
		return true
	}

	return false
}

// SetFirst gets a reference to the given string and assigns it to the First field.
func (o *PageLink) SetFirst(v string) {
	o.First = &v
}

// GetLast returns the Last field value if set, zero value otherwise.
func (o *PageLink) GetLast() string {
	if o == nil || IsNil(o.Last) {
		var ret string
		return ret
	}
	return *o.Last
}

// GetLastOk returns a tuple with the Last field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageLink) GetLastOk() (*string, bool) {
	if o == nil || IsNil(o.Last) {
		return nil, false
	}
	return o.Last, true
}

// HasLast returns a boolean if a field has been set.
func (o *PageLink) HasLast() bool {
	if o != nil && !IsNil(o.Last) {
		return true
	}

	return false
}

// SetLast gets a reference to the given string and assigns it to the Last field.
func (o *PageLink) SetLast(v string) {
	o.Last = &v
}

func (o PageLink) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PageLink) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	if !IsNil(o.First) {
		toSerialize["first"] = o.First
	}
	if !IsNil(o.Last) {
		toSerialize["last"] = o.Last
	}
	return toSerialize, nil
}

type NullablePageLink struct {
	value *PageLink
	isSet bool
}

func (v NullablePageLink) Get() *PageLink {
	return v.value
}

func (v *NullablePageLink) Set(val *PageLink) {
	v.value = val
	v.isSet = true
}

func (v NullablePageLink) IsSet() bool {
	return v.isSet
}

func (v *NullablePageLink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePageLink(val *PageLink) *NullablePageLink {
	return &NullablePageLink{value: val, isSet: true}
}

func (v NullablePageLink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePageLink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


