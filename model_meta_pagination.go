/*
Firefly III API v2.0.4

This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2023-06-11T09:14:35+00:00 

API version: 2.0.4
Contact: james@firefly-iii.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MetaPagination type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetaPagination{}

// MetaPagination struct for MetaPagination
type MetaPagination struct {
	Total *int32 `json:"total,omitempty"`
	Count *int32 `json:"count,omitempty"`
	PerPage *int32 `json:"per_page,omitempty"`
	CurrentPage *int32 `json:"current_page,omitempty"`
	TotalPages *int32 `json:"total_pages,omitempty"`
}

// NewMetaPagination instantiates a new MetaPagination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetaPagination() *MetaPagination {
	this := MetaPagination{}
	return &this
}

// NewMetaPaginationWithDefaults instantiates a new MetaPagination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetaPaginationWithDefaults() *MetaPagination {
	this := MetaPagination{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *MetaPagination) GetTotal() int32 {
	if o == nil || IsNil(o.Total) {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaPagination) GetTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *MetaPagination) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *MetaPagination) SetTotal(v int32) {
	o.Total = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *MetaPagination) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaPagination) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *MetaPagination) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *MetaPagination) SetCount(v int32) {
	o.Count = &v
}

// GetPerPage returns the PerPage field value if set, zero value otherwise.
func (o *MetaPagination) GetPerPage() int32 {
	if o == nil || IsNil(o.PerPage) {
		var ret int32
		return ret
	}
	return *o.PerPage
}

// GetPerPageOk returns a tuple with the PerPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaPagination) GetPerPageOk() (*int32, bool) {
	if o == nil || IsNil(o.PerPage) {
		return nil, false
	}
	return o.PerPage, true
}

// HasPerPage returns a boolean if a field has been set.
func (o *MetaPagination) HasPerPage() bool {
	if o != nil && !IsNil(o.PerPage) {
		return true
	}

	return false
}

// SetPerPage gets a reference to the given int32 and assigns it to the PerPage field.
func (o *MetaPagination) SetPerPage(v int32) {
	o.PerPage = &v
}

// GetCurrentPage returns the CurrentPage field value if set, zero value otherwise.
func (o *MetaPagination) GetCurrentPage() int32 {
	if o == nil || IsNil(o.CurrentPage) {
		var ret int32
		return ret
	}
	return *o.CurrentPage
}

// GetCurrentPageOk returns a tuple with the CurrentPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaPagination) GetCurrentPageOk() (*int32, bool) {
	if o == nil || IsNil(o.CurrentPage) {
		return nil, false
	}
	return o.CurrentPage, true
}

// HasCurrentPage returns a boolean if a field has been set.
func (o *MetaPagination) HasCurrentPage() bool {
	if o != nil && !IsNil(o.CurrentPage) {
		return true
	}

	return false
}

// SetCurrentPage gets a reference to the given int32 and assigns it to the CurrentPage field.
func (o *MetaPagination) SetCurrentPage(v int32) {
	o.CurrentPage = &v
}

// GetTotalPages returns the TotalPages field value if set, zero value otherwise.
func (o *MetaPagination) GetTotalPages() int32 {
	if o == nil || IsNil(o.TotalPages) {
		var ret int32
		return ret
	}
	return *o.TotalPages
}

// GetTotalPagesOk returns a tuple with the TotalPages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaPagination) GetTotalPagesOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalPages) {
		return nil, false
	}
	return o.TotalPages, true
}

// HasTotalPages returns a boolean if a field has been set.
func (o *MetaPagination) HasTotalPages() bool {
	if o != nil && !IsNil(o.TotalPages) {
		return true
	}

	return false
}

// SetTotalPages gets a reference to the given int32 and assigns it to the TotalPages field.
func (o *MetaPagination) SetTotalPages(v int32) {
	o.TotalPages = &v
}

func (o MetaPagination) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetaPagination) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.PerPage) {
		toSerialize["per_page"] = o.PerPage
	}
	if !IsNil(o.CurrentPage) {
		toSerialize["current_page"] = o.CurrentPage
	}
	if !IsNil(o.TotalPages) {
		toSerialize["total_pages"] = o.TotalPages
	}
	return toSerialize, nil
}

type NullableMetaPagination struct {
	value *MetaPagination
	isSet bool
}

func (v NullableMetaPagination) Get() *MetaPagination {
	return v.value
}

func (v *NullableMetaPagination) Set(val *MetaPagination) {
	v.value = val
	v.isSet = true
}

func (v NullableMetaPagination) IsSet() bool {
	return v.isSet
}

func (v *NullableMetaPagination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetaPagination(val *MetaPagination) *NullableMetaPagination {
	return &NullableMetaPagination{value: val, isSet: true}
}

func (v NullableMetaPagination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetaPagination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


