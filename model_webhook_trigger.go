/*
Firefly III API v2.0.4

This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2023-06-11T09:14:35+00:00 

API version: 2.0.4
Contact: james@firefly-iii.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// WebhookTrigger The trigger for the webhook.
type WebhookTrigger string

// List of WebhookTrigger
const (
	STORE_TRANSACTION WebhookTrigger = "STORE_TRANSACTION"
	UPDATE_TRANSACTION WebhookTrigger = "UPDATE_TRANSACTION"
	DESTROY_TRANSACTION WebhookTrigger = "DESTROY_TRANSACTION"
)

// All allowed values of WebhookTrigger enum
var AllowedWebhookTriggerEnumValues = []WebhookTrigger{
	"STORE_TRANSACTION",
	"UPDATE_TRANSACTION",
	"DESTROY_TRANSACTION",
}

func (v *WebhookTrigger) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := WebhookTrigger(value)
	for _, existing := range AllowedWebhookTriggerEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid WebhookTrigger", value)
}

// NewWebhookTriggerFromValue returns a pointer to a valid WebhookTrigger
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewWebhookTriggerFromValue(v string) (*WebhookTrigger, error) {
	ev := WebhookTrigger(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for WebhookTrigger: valid values are %v", v, AllowedWebhookTriggerEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v WebhookTrigger) IsValid() bool {
	for _, existing := range AllowedWebhookTriggerEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to WebhookTrigger value
func (v WebhookTrigger) Ptr() *WebhookTrigger {
	return &v
}

type NullableWebhookTrigger struct {
	value *WebhookTrigger
	isSet bool
}

func (v NullableWebhookTrigger) Get() *WebhookTrigger {
	return v.value
}

func (v *NullableWebhookTrigger) Set(val *WebhookTrigger) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookTrigger) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookTrigger) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookTrigger(val *WebhookTrigger) *NullableWebhookTrigger {
	return &NullableWebhookTrigger{value: val, isSet: true}
}

func (v NullableWebhookTrigger) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookTrigger) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

